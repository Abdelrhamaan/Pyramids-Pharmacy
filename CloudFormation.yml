AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to launch an EC2 instance with Docker, Docker Compose, and deploy the Pyramids-Pharmacy application, including an Elastic IP for static IP addressing.

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
    ConstraintDescription: must be a valid EC2 instance type.

Resources:
  # Security Group to allow SSH, HTTP, and application-specific ports
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, and App Ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

  # IAM Role for EC2
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # IAM Instance Profile for EC2
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2InstanceRole

  # Elastic IP for static IP addressing
  ElasticIP:
    Type: AWS::EC2::EIP

  # Associate Elastic IP with EC2 instance
  ElasticIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref EC2Instance
      EIP: !Ref ElasticIP

  # EC2 Instance with Docker and application setup
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      ImageId: ami-0fff1b9a61dec8a5f
      KeyName: CloudFormationKeyPair
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 20
            VolumeType: gp3
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update packages
          sudo yum update -y

          # Increase Swap Memory
          sudo fallocate -l 2G /swapfile       # Create a 2GB swap file
          sudo chmod 600 /swapfile            # Set correct permissions
          sudo mkswap /swapfile               # Format the file as swap
          sudo swapon /swapfile               # Enable the swap file
          echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab  # Make it persistent across reboots
          echo 'vm.swappiness=10' | sudo tee -a /etc/sysctl.conf     # Adjust swappiness (optional)
          sudo sysctl -p                                             # Apply the changes

          # Install Docker
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user

          # Reload group membership to avoid permission issues
          newgrp docker

          # Install Git
          sudo yum install -y git

          # Install Node.js and npm
          curl -sL https://rpm.nodesource.com/setup_20.x | sudo bash -
          sudo yum install -y nodejs

          # Install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          # Clone your GitHub repository
          cd /home/ec2-user
          git clone https://github.com/Abdelrhamaan/Pyramids-Pharmacy

          # Set the API base URL in frontend environment
          echo "REACT_APP_API_BASE_URL=http://${ElasticIP}:8000/" >> /home/ec2-user/Pyramids-Pharmacy/frontend/.env

          # Install node modules
          cd Pyramids-Pharmacy/frontend
          sudo chown -R ec2-user:ec2-user .
          npm install

          # remove space for building 
          docker system prune -a -f
          sudo rm -rf /var/log/*


          # Move to the project directory and deploy using Docker Compose
          cd /home/ec2-user/Pyramids-Pharmacy
          docker-compose up --build -d

          # make migrations 
          docker exec -it pyramids-pharmacy-backend-1 python manage.py makemigrations
          docker exec -it pyramids-pharmacy-backend-1 python manage.py migrate 

          # restart docker 
          docker-compose restart



Outputs:
  InstancePublicIP:
    Description: "Public IP of the EC2 instance"
    Value: !GetAtt EC2Instance.PublicIp

  InstancePublicDNS:
    Description: "Public DNS of the EC2 instance"
    Value: !GetAtt EC2Instance.PublicDnsName
